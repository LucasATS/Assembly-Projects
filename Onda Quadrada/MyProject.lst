;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/06/2023 14:17:37
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x020056  	LJMP 86
0x0003	0x020000  	LJMP 0
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x020000  	LJMP 0
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020000  	LJMP 0
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
0x0026	0x00      	NOP
0x0027	0x00      	NOP
0x0028	0x00      	NOP
0x0029	0x00      	NOP
0x002A	0x00      	NOP
0x002B	0x020000  	LJMP 0
0x002E	0x00      	NOP
0x002F	0x00      	NOP
0x0030	0x00      	NOP
0x0031	0x00      	NOP
0x0032	0x00      	NOP
0x0033	0x020000  	LJMP 0
0x0036	0x00      	NOP
0x0037	0x00      	NOP
0x0038	0x00      	NOP
0x0039	0x00      	NOP
0x003A	0x00      	NOP
0x003B	0x020000  	LJMP 0
0x003E	0x00      	NOP
0x003F	0x00      	NOP
0x0040	0x00      	NOP
0x0041	0x00      	NOP
0x0042	0x00      	NOP
0x0043	0x00      	NOP
0x0044	0x00      	NOP
0x0045	0x00      	NOP
0x0046	0x00      	NOP
0x0047	0x00      	NOP
0x0048	0x00      	NOP
0x0049	0x00      	NOP
0x004A	0x00      	NOP
0x004B	0x020000  	LJMP 0
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x004E	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x004F	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x0050	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x0051	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x0052	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x0053	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x0055	0x22      	RET
; end of ___CC2D
_main:
0x0056	0x758180  	MOV SP, #128
;MyProject.c,1 :: 		void main() {
;MyProject.c,3 :: 		mov TR0_bit, #0 ; desliga o timer0
0x0059	0x758800  	MOV TR0_bit, 0
;MyProject.c,4 :: 		mov TF0_bit, #0 ; limpar o TF0
0x005C	0x758800  	MOV TF0_bit, 0
;MyProject.c,6 :: 		mov TMOD, #0b00000010; Timer0 como temp/cont de 8 bits com recarga
0x005F	0x758902  	MOV TMOD, 2
;MyProject.c,8 :: 		mov TH0, #76 ; 256 - 180
0x0062	0x758C4C  	MOV TH0, 76
;MyProject.c,9 :: 		mov TL0, #76 ; 256 - 180
0x0065	0x758A4C  	MOV TL0, 76
;MyProject.c,11 :: 		mov P0_7_bit, #0 ; limpa o pino
0x0068	0x758000  	MOV P0_7_bit, 0
;MyProject.c,13 :: 		mov TR0_bit, #1 ;  liga o timer0
0x006B	0x758801  	MOV TR0_bit, 1
;MyProject.c,16 :: 		mov R1, #0
0x006E	0x7900    	MOV R1, 0
;MyProject.c,17 :: 		mov A, R1
0x0070	0xE9      	MOV A, R1
;MyProject.c,19 :: 		LOOP:
LOOP:
;MyProject.c,20 :: 		jnb TF0_bit, final_if ; Aguarda até o estouro do Timer0 seja ativada
0x0071	0x308D07  	JNB TF0_bit, final_if
;MyProject.c,21 :: 		clr TF0_bit ; Limpa estouro
0x0074	0xC28D    	CLR TF0_bit
;MyProject.c,22 :: 		cpl P0_7_bit ; Inverte o estado: P0_7_bit = ~P0_7_bit
0x0076	0xB287    	CPL P0_7_bit
;MyProject.c,25 :: 		add A, #1 ;
0x0078	0x2401    	ADD A, 1
;MyProject.c,26 :: 		mov R1, A ;
0x007A	0xF9      	MOV R1, A
;MyProject.c,28 :: 		final_if:
final_if:
;MyProject.c,29 :: 		sjmp LOOP
0x007B	0x80F4    	SJMP LOOP
;MyProject.c,31 :: 		}
0x007D	0x80FE    	SJMP #254
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x004E       [8]    ___CC2D
0x0056      [41]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0080       [0]    P0_7_bit
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0088       [0]    TR0_bit
0x0088       [0]    TF0_bit
0x0089       [1]    TMOD
0x008A       [1]    TL0
0x008C       [1]    TH0
0x00D0       [1]    PSW
0x00E0       [1]    ACC
0x00F0       [1]    B
//** Label List: ** 
//----------------------------------------------
  LOOP
  final_if
  _main
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
